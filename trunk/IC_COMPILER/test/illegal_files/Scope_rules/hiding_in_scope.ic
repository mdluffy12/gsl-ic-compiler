/* For each program, there is a hierarchy of scopes consisting of: the global scope, class scopes,
method scopes, and local scopes for blocks within each method, rules:

1. When resolving an identifier at a certain point in the program, the enclosing scopes are
   searched for that identifier.

2. Fields and methods, both static and virtual, can be used either directly (without the dot prefix) if the
   current class contains those fields or method

3. The current class scope is the instance scope if the current 
   method is virtual; or the static class scope if the current method is static.

4. Identifiers, regardless of their kind, cannot be defined multiple times in the same scope.

5. identifiers, regardless of their kind, cannot be defined 
    multiple times in the same scope or the scope of the superclass.
    
output: (5th rule violation)
semantic error at line 31: The method must return a result of type int
*/

class A
{ 
  
  int a;
  static void main (string [] args){
  
  }
  
  
  int foo(int a){
    {
      int foo = 3;
    } 
  }
  
  
}

class B extends A{

   string a;
 
}

 

 