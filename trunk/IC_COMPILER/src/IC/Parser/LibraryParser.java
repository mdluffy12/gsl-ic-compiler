
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Wed Nov 21 14:03:24 IST 2012
//----------------------------------------------------

package IC.Parser;

import IC.*;
import IC.AST.*;
import IC.Parser.*;
import java.util.*;
import IC.Parser.LibraryParser.Global;
import IC.Parser.Debugger.*;
import java_cup.runtime.*;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Wed Nov 21 14:03:24 IST 2012
  */
public @SuppressWarnings(value={"all"}) class LibraryParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public LibraryParser() {super();}

  /** Constructor which sets the default scanner. */
  public LibraryParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public LibraryParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\021\000\002\002\007\000\002\002\004\000\002\002" +
    "\006\000\002\004\003\000\002\004\004\000\002\003\011" +
    "\000\002\003\011\000\002\003\010\000\002\003\010\000" +
    "\002\006\003\000\002\006\005\000\002\005\004\000\002" +
    "\007\003\000\002\007\003\000\002\007\003\000\002\007" +
    "\005\000\002\007\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\047\000\004\035\005\001\002\000\004\002\051\001" +
    "\002\000\004\061\006\001\002\000\004\026\007\001\002" +
    "\000\006\027\012\037\011\001\002\000\006\027\047\037" +
    "\011\001\002\000\014\040\020\046\017\047\021\054\014" +
    "\061\015\001\002\000\004\002\uffff\001\002\000\006\027" +
    "\ufffe\037\ufffe\001\002\000\006\030\ufff3\060\ufff3\001\002" +
    "\000\006\030\ufff1\060\ufff1\001\002\000\006\030\036\060" +
    "\040\001\002\000\006\030\ufff4\060\ufff4\001\002\000\004" +
    "\060\022\001\002\000\006\030\ufff5\060\ufff5\001\002\000" +
    "\004\024\023\001\002\000\014\025\026\046\017\047\021" +
    "\054\014\061\015\001\002\000\006\025\ufff8\033\ufff8\001" +
    "\002\000\006\030\036\060\035\001\002\000\004\032\034" +
    "\001\002\000\006\025\031\033\030\001\002\000\012\046" +
    "\017\047\021\054\014\061\015\001\002\000\004\032\032" +
    "\001\002\000\006\027\ufffb\037\ufffb\001\002\000\006\025" +
    "\ufff7\033\ufff7\001\002\000\006\027\ufff9\037\ufff9\001\002" +
    "\000\006\025\ufff6\033\ufff6\001\002\000\004\031\037\001" +
    "\002\000\006\030\ufff2\060\ufff2\001\002\000\004\024\041" +
    "\001\002\000\014\025\042\046\017\047\021\054\014\061" +
    "\015\001\002\000\004\032\046\001\002\000\006\025\044" +
    "\033\030\001\002\000\004\032\045\001\002\000\006\027" +
    "\ufffc\037\ufffc\001\002\000\006\027\ufffa\037\ufffa\001\002" +
    "\000\004\002\001\001\002\000\006\027\ufffd\037\ufffd\001" +
    "\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\047\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\003\012\004\007" +
    "\001\001\000\004\003\047\001\001\000\004\007\015\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\005\023\006\026\007\024\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\005\032\007\024\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\005\023\006\042\007\024\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$LibraryParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$LibraryParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$LibraryParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {

		Token t = lexer.next_token();
		if(!t.isEOF()){
			if(printTokens){
			Global.debugger.Print(t.toString());
			}
		return t; 
		}
		
		return t;

    }



	/* global veriables */
	private Lexer lexer;
	private boolean printTokens = false;
	
	public static class Global{
	
    	public static Debugger debugger = null;
    }
    

	private String debugFilePath = "C:\\files\\libParserDebug.txt";
	public LibraryParser(Lexer lexer) {
		super(lexer);
		this.lexer = lexer;
		Global.debugger = Debugger.getDebuggerInstance();
		Global.debugger.Print("---------- library parser section ----------\n");
	}
	
	   /* called by the parser as soon as a syntax error
	      is detected (but before error recovery is attempted) */
       public void syntax_error(Symbol currentToken){
        //throw new SyntaxError();
        Token t = (Token) currentToken;
        System.out.println("called syntax_error() with " + t);
      }
      
      /* called by the parser if it is unable to recover
         from a syntax error */
      public void unrecovered_syntax_error(Symbol currentToken){
        System.out.println("called unrecovered_syntax_error() " );
      }
	

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$LibraryParser$actions {
  private final LibraryParser parser;

  /** Constructor */
  CUP$LibraryParser$actions(LibraryParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$LibraryParser$do_action(
    int                        CUP$LibraryParser$act_num,
    java_cup.runtime.lr_parser CUP$LibraryParser$parser,
    java.util.Stack            CUP$LibraryParser$stack,
    int                        CUP$LibraryParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$LibraryParser$result;

      /* select the action based on the action number */
      switch (CUP$LibraryParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // type ::= CLASS_ID 
            {
              Type RESULT =null;
		int class_idleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).left;
		int class_idright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).right;
		String class_id = (String)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.peek()).value;
		 RESULT = new UserType(class_idleft, class_id); // new user-defined class
	           Global.debugger.Print("reduced primitive type class " + RESULT); 
	        
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("type",5, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // type ::= type LB RB 
            {
              Type RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)).right;
		Type t = (Type)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)).value;
		 t.incrementDimension(); //increment number of dimensions by 1
	           RESULT = t;
	           Global.debugger.Print("reduced primitive type " + RESULT);          
	        
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("type",5, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // type ::= STRING 
            {
              Type RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).left;
		int strright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).right;
		Object str = (Object)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.peek()).value;
		 RESULT = new PrimitiveType(strleft, DataTypes.STRING); 
	           Global.debugger.Print("reduced primitive type " + RESULT);          
	        
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("type",5, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // type ::= BOOLEAN 
            {
              Type RESULT =null;
		int boolleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).left;
		int boolright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).right;
		Object bool = (Object)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.peek()).value;
		 RESULT = new PrimitiveType(boolleft, DataTypes.BOOLEAN); 
	           Global.debugger.Print("reduced primitive type " + RESULT);          
	        
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("type",5, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // type ::= INT 
            {
              Type RESULT =null;
		int int_typeleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).left;
		int int_typeright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).right;
		Object int_type = (Object)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.peek()).value;
		 RESULT = new PrimitiveType(int_typeleft, DataTypes.INT);   
               Global.debugger.Print("reduced primitive type " + RESULT);        
            
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("type",5, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // formal ::= type ID 
            {
              Formal RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-1)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-1)).right;
		Type t = (Type)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-1)).value;
		int identifierleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).left;
		int identifierright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).right;
		String identifier = (String)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.peek()).value;
		 RESULT = new Formal(t,identifier); 
               Global.debugger.Print("reduced formal : " + RESULT);    
            
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("formal",3, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-1)), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // funcParams ::= funcParams COMMA formal 
            {
              FunctionParameters RESULT =null;
		int paramsleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)).left;
		int paramsright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)).right;
		FunctionParameters params = (FunctionParameters)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)).value;
		int new_paramleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).left;
		int new_paramright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).right;
		Formal new_param = (Formal)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.peek()).value;
		 params.addParameter(new_param);
			   RESULT = params;
               Global.debugger.Print("reduced function parameters : " + RESULT); 
            
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("funcParams",4, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // funcParams ::= formal 
            {
              FunctionParameters RESULT =null;
		int parameterleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).left;
		int parameterright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).right;
		Formal parameter = (Formal)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.peek()).value;
		 RESULT = new FunctionParameters(parameter) ;
               Global.debugger.Print("reduced function parameters : " + RESULT); 
            
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("funcParams",4, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // method ::= STATIC VOID ID LP RP SEMI 
            {
              LibraryMethod RESULT =null;
		int identleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-3)).left;
		int identright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-3)).right;
		String ident = (String)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-3)).value;
		 RESULT = new LibraryMethod(new PrimitiveType(identleft, DataTypes.VOID), ident, new ArrayList<Formal>()); 
               Global.debugger.Print("reduced static method: " + RESULT);         
            
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("method",1, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-5)), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // method ::= STATIC type ID LP RP SEMI 
            {
              LibraryMethod RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-4)).right;
		Type t = (Type)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-4)).value;
		int identleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-3)).left;
		int identright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-3)).right;
		String ident = (String)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-3)).value;
		 RESULT = new LibraryMethod(t, ident, new ArrayList<Formal>()); 
               Global.debugger.Print("reduced static method: " + RESULT);         
            
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("method",1, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-5)), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // method ::= STATIC VOID ID LP funcParams RP SEMI 
            {
              LibraryMethod RESULT =null;
		int identleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-4)).left;
		int identright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-4)).right;
		String ident = (String)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-4)).value;
		int paramsleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)).left;
		int paramsright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)).right;
		FunctionParameters params = (FunctionParameters)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)).value;
		 RESULT = new LibraryMethod(new PrimitiveType(identleft, DataTypes.VOID), ident, params.getParameters()); 
               Global.debugger.Print("reduced static method: " + RESULT);         
            
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("method",1, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-6)), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // method ::= STATIC type ID LP funcParams RP SEMI 
            {
              LibraryMethod RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-5)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-5)).right;
		Type t = (Type)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-5)).value;
		int identleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-4)).left;
		int identright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-4)).right;
		String ident = (String)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-4)).value;
		int paramsleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)).left;
		int paramsright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)).right;
		FunctionParameters params = (FunctionParameters)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)).value;
		 RESULT = new LibraryMethod(t, ident, params.getParameters());
               Global.debugger.Print("reduced static method: " + RESULT);         
            
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("method",1, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-6)), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // methods ::= methods method 
            {
              ArrayList<Method> RESULT =null;
		int methodListleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-1)).left;
		int methodListright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-1)).right;
		ArrayList<Method> methodList = (ArrayList<Method>)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-1)).value;
		int new_methodleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).left;
		int new_methodright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).right;
		LibraryMethod new_method = (LibraryMethod)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.peek()).value;
		 methodList.add(new_method);
			   RESULT = methodList;
               Global.debugger.Print("reduced method list : " + RESULT); 
            
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("methods",2, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-1)), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // methods ::= method 
            {
              ArrayList<Method> RESULT =null;
		int mleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).left;
		int mright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()).right;
		LibraryMethod m = (LibraryMethod)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.peek()).value;
		 ArrayList<Method> methodList = new ArrayList<Method>();
               methodList.add(m);
               RESULT = methodList ;
               Global.debugger.Print("reduced method list : " + RESULT); 
            
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("methods",2, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // library ::= CLASS CLASS_ID LCBR RCBR 
            {
              ICClass RESULT =null;
		int class_idleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)).left;
		int class_idright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)).right;
		String class_id = (String)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-2)).value;
		 RESULT = new ICClass(class_idleft, class_id,new ArrayList<Field>(),new ArrayList<Method>()); 
               Global.debugger.Print("reduced library : " + RESULT); 
            
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("library",0, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-3)), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= library EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-1)).right;
		ICClass start_val = (ICClass)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-1)).value;
		RESULT = start_val;
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-1)), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$LibraryParser$parser.done_parsing();
          return CUP$LibraryParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // library ::= CLASS CLASS_ID LCBR methods RCBR 
            {
              ICClass RESULT =null;
		int class_idleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-3)).left;
		int class_idright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-3)).right;
		String class_id = (String)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-3)).value;
		int methodListleft = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-1)).left;
		int methodListright = ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-1)).right;
		ArrayList<Method> methodList = (ArrayList<Method>)((java_cup.runtime.Symbol) CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-1)).value;
		 RESULT = new ICClass(class_idleft, class_id,new ArrayList<Field>(),methodList); 
               Global.debugger.Print("reduced library : " + RESULT); 
            
              CUP$LibraryParser$result = parser.getSymbolFactory().newSymbol("library",0, ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.elementAt(CUP$LibraryParser$top-4)), ((java_cup.runtime.Symbol)CUP$LibraryParser$stack.peek()), RESULT);
            }
          return CUP$LibraryParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

